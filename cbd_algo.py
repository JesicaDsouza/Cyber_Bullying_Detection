# -*- coding: utf-8 -*-
"""cbd_checkpoint.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kXxY8zgEXpWg4Pli_LVz5tJpGgh9i9Ge
"""

import numpy as np
import pandas as pd

import os

from sklearn.feature_extraction.text import CountVectorizer #tokenize 
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn import svm
from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestClassifier

data1 = pd.read_csv('public_data_labeled.csv')
data2 = pd.read_csv('train.csv') 
data3 = pd.read_csv('hindi_cbd.csv')
df = pd.concat([data1, data2,data3])

df.head()
#len(df)

df_x = df["Text"]
df_y = df["label"]

df_x

x_train,x_test,y_train,y_test = train_test_split(df_x,df_y,test_size = 0.2,random_state = 4)

cv = CountVectorizer()

x_traincv = cv.fit_transform(x_train.values.astype('U'))

mnb = MultinomialNB()

mnb.fit(x_traincv,y_train)

x_testcv = cv.transform(x_test)

pred= mnb.predict(x_testcv)

pred

actual = np.array(y_test)

actual

count = 0
for i in range(len(pred)):
    if(pred[i] ==  actual[i]):
        count += 1

count

len(pred)

12384/13749

print("Accuracy of Naives Bayes : ",mnb.score(x_testcv,y_test))

tuned_parameters = {'kernel' : ['linear','rbf'],'gamma': [1e-3,1e-4],'C': [1,10,100,1000]}

model = svm.SVC()
model.fit(x_traincv,y_train)

#model1 = GridSearchCV(svm.SVC(),tuned_parameters)

#model1.fit(x_traincv,y_train)

#print(model1.best_params_)

print("Accuracy = ",model.score(x_testcv,y_test))
#print("Accuracy = ",model1.score(x_testcv,y_test))

rf = RandomForestClassifier()
rf.fit(x_traincv,y_train)

print("Accuracy = ",rf.score(x_testcv,y_test))

